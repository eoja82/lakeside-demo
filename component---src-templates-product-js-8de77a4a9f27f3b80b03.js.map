{"version":3,"sources":["webpack:///./src/components/products/products.js","webpack:///./src/components/products/prodSidebar.js","webpack:///./src/templates/product.js"],"names":["Display","render","titleInfo","this","props","product","slug","split","replace","descLogoSplit","descriptionLogos","id","styles","container","Helmet","name","content","description","header","h1","productImg","images","map","x","i","src","image","alt","type","key","className","logoDescription","p","products","logoDiv","href","link","target","rel","logo","manufacturer","React","Component","data","activeStyles","backgroundColor","color","list","allDataJson","nodes","forEach","listItem","push","path","sidebar","to","activeStyle","layout","sideBar","display","dataJson","query"],"mappings":"4MAyCeA,E,gLApCbC,OAAA,WACE,IACIC,EADQC,KAAKC,MAAMC,QAAQC,KAAKC,MAAM,KACpB,GAAGC,QAAQ,KAAM,KACnCC,EAAgBN,KAAKC,MAAMC,QAAQK,iBAAiBH,MAAM,OAC9D,OACE,yBAAKI,GAAIC,IAAOC,WACd,kBAACC,EAAA,OAAD,KACE,qEAA8CZ,GAC9C,0BAAMa,KAAK,cAAcC,QAASb,KAAKC,MAAMC,QAAQY,YAAcd,KAAKC,MAAMC,QAAQK,mBACtF,0BAAMK,KAAK,WAAWC,QAAO,8DAAgEd,KAE/F,yBAAKS,GAAIC,IAAOM,QACd,wBAAIP,GAAIC,IAAOO,IAAKhB,KAAKC,MAAMC,QAAQY,cAEzC,yBAAKN,GAAIC,IAAOQ,YACbjB,KAAKC,MAAMC,QAAQgB,OAAOC,KAAK,SAACC,EAAGC,GAAJ,OAC9B,yBAAKC,IAAKF,EAAEG,MAAOC,IAAKJ,EAAEK,KAAMC,IAAKL,EAAGM,UAAWlB,IAAOQ,iBAG9D,yBAAKT,GAAIC,IAAOmB,iBACd,uBAAGD,UAAWlB,IAAOoB,GAArB,+CACCvB,EAAca,KAAK,SAACC,EAAGC,GAAJ,OAAU,uBAAGM,UAAWlB,IAAOoB,EAAGH,IAAKL,GAAID,OAEjE,yBAAKZ,GAAIC,IAAOqB,UACb9B,KAAKC,MAAMC,QAAQA,QAAQiB,KAAK,SAACC,EAAGC,GAAJ,OAC/B,yBAAKK,IAAKL,EAAGb,GAAIC,IAAOsB,SACtB,uBAAGC,KAAMZ,EAAEa,KAAMC,OAAO,SAASC,IAAI,uBACnC,yBAAKb,IAAKF,EAAEgB,KAAMZ,IAAKJ,EAAEiB,uB,GA5BnBC,IAAMC,W,yDCAb,aACb,IAAMC,EAAI,OAUJC,EAAe,CACnBC,gBAAiB,yBACjBC,MAAO,SAELC,EAAO,GAMX,OALAJ,EAAKK,YAAYC,MAAMC,SAAS,WAAS1B,GAAO,IAAdlB,EAAa,EAAbA,KAE5B6C,EADQ7C,EAAKC,MAAM,KACF,GAAGC,QAAQ,KAAM,KACtCuC,EAAKK,KAAK,CAACC,KAAM/C,EAAMuB,IAAKL,EAAGT,KAAMoC,OAGrC,yBAAKxC,GAAIC,IAAO0C,SACbP,EAAKzB,KAAK,SAAAC,GAAC,OACV,kBAAC,IAAD,CAAMgC,GAAIhC,EAAE8B,KAAM1C,GAAIC,IAAOwB,KAAMoB,YAAaZ,EAAcf,IAAKN,EAAEM,KAClEN,EAAER,W,qBC7Bb,sCAOe,sBAAe,IAAZ4B,EAAW,EAAXA,KAChB,OACE,kBAAC,IAAD,KACE,yBAAKhC,GAAIC,IAAO6C,QACd,kBAAC,EAAD,CAAS9C,GAAIC,IAAO8C,UACpB,kBAAC,EAAD,CAAS/C,GAAIC,IAAO+C,QAAStD,QAASsC,EAAKiB,cALpC,IAWFC,EAAK,a","file":"component---src-templates-product-js-8de77a4a9f27f3b80b03.js","sourcesContent":["import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport styles from \"./styles/products.module.css\"\n\nclass Display extends React.Component {\n  render() {\n    let split = this.props.product.slug.split(\"/\")\n    let titleInfo = split[2].replace(/-/g, \" \");\n    let descLogoSplit = this.props.product.descriptionLogos.split(/\\*/g);\n    return (\n      <div id={styles.container}>\n        <Helmet>\n          <title>{`Lakeside Lumber is your source for ${titleInfo}`}</title>\n          <meta name=\"description\" content={this.props.product.description + this.props.product.descriptionLogos} />\n          <meta name=\"keywords\" content={`marcell, bigfok, effie, deer river, talmoon, grand rapids, ${titleInfo}`} />\n        </Helmet>\n        <div id={styles.header}>\n          <h1 id={styles.h1}>{this.props.product.description}</h1>\n        </div>\n        <div id={styles.productImg}>\n          {this.props.product.images.map( (x, i) =>\n            <img src={x.image} alt={x.type} key={i} className={styles.productImg} />\n          )}\n        </div>\n        <div id={styles.logoDescription}>\n          <p className={styles.p}>Click on a logo below for more information.</p>\n          {descLogoSplit.map( (x, i) => <p className={styles.p} key={i}>{x}</p>)}\n        </div>\n        <div id={styles.products}>\n          {this.props.product.product.map( (x, i) => \n            <div key={i} id={styles.logoDiv}>\n              <a href={x.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={x.logo} alt={x.manufacturer} />\n              </a>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\nexport default Display\n\n","import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\nimport styles from \"./styles/prodSidebar.module.css\"\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n  query SlugTwoQuery {\n    allDataJson {\n      nodes {\n        slug\n      }\n    }\n  }\n  `)\n  // for active Link\n  const activeStyles = {\n    backgroundColor: \"rgb(198, 198, 198, .7)\",\n    color: \"black\"\n  };\n  let list = [];\n  data.allDataJson.nodes.forEach( ({slug}, i) => {\n    let split = slug.split(\"/\")\n    let listItem = split[2].replace(/-/g, \" \");\n    list.push({path: slug, key: i, name: listItem})\n  });\n  return (\n    <div id={styles.sidebar}>\n      {list.map( x => (\n        <Link to={x.path} id={styles.link} activeStyle={activeStyles} key={x.key}>\n          {x.name}\n        </Link>\n      ))}\n    </div>\n  )\n}","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Display from \"../components/products/products.js\"\nimport Sidebar from \"../components/products/prodSidebar.js\"\nimport { graphql } from \"gatsby\";\nimport styles from \"./product.module.css\"\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <div id={styles.layout}>\n        <Sidebar id={styles.sideBar} />\n        <Display id={styles.display} product={data.dataJson} />\n      </div>   \n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($slug: String!) {\n    dataJson(slug: {eq: $slug}) {\n      description\n      descriptionLogos\n      images {\n        image \n        type\n      }\n      product {\n        link\n        manufacturer\n        logo \n        type\n      }\n      slug\n    }\n  }\n`"],"sourceRoot":""}