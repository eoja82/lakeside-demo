{"version":3,"file":"component---src-templates-product-js-b7531dba334bf0b41a51.js","mappings":"4NAMA,SAASA,EAAOC,GACd,OACE,gBAACC,EAAA,EAAD,CAAWC,GAAG,SAASC,OAAK,EAACC,GAAIC,EAAAA,QAAAA,MAAcC,MAAO,CAACC,gBAAgB,QAAQC,EAAAA,EAAAA,IAAW,sBAApB,MACpE,sBAAIC,UAAU,UAAUL,GAAIC,EAAAA,QAAAA,WAAmBC,MAAO,CAAC,kBAAmB,OAAQN,EAAMU,OAK9FX,EAAOY,WAAa,CAClBD,KAAME,IAAAA,OAAAA,YAGR,S,mMC2CA,MA/CA,SAAiBZ,GACf,IACIa,EADQb,EAAMc,QAAQC,KAAKC,MAAM,KACf,GAAGC,QAAQ,KAAM,KACnCC,EAAY,SAEhB,OADAC,QAAQC,IAAIpB,EAAMc,QAAQO,WAExB,2BACE,gBAACC,EAAA,GAAD,KACI,mEAA8CT,GAC9C,wBAAMU,KAAK,cAAcC,QAASxB,EAAMc,QAAQW,YAAczB,EAAMc,QAAQY,mBAC5E,wBAAMH,KAAK,WAAWC,QAAO,8DAAgEX,KAEjG,gBAAC,IAAD,CAAQH,KAAMG,EAAUc,gBACxB,gBAAC,IAAD,CAAWjB,KAAMV,EAAMc,QAAQO,YAC/B,qBAAGjB,GAAIC,EAAAA,QAAAA,aAAqBL,EAAMc,QAAQW,aAC1C,gBAAC,IAAD,MACA,gBAACxB,EAAA,EAAD,KACE,gBAAC2B,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGzB,MAAO,CAAC0B,aAAc,WAC7ChC,EAAMc,QAAQmB,SAASC,KAAK,SAACC,EAAGC,GAAJ,OAC3B,gBAACC,EAAA,EAAD,CAAK/B,MAAO,CAACgC,QAAS,QAASC,IAAKH,GAClC,gBAACI,EAAA,EAAD,KACE,gBAACA,EAAA,MAAD,CAAUC,KAAKjC,EAAAA,EAAAA,IAAW2B,EAAEO,MAAMD,KAAME,IAAKR,EAAEO,MAAMC,MACrD,gBAACH,EAAA,aAAD,CAAiBlC,MAAO,CAACgC,QAAS,MAChC,gBAACE,EAAA,QAAD,CAAY/B,UAAW,WAAaJ,EAAAA,QAAAA,WAAmB8B,EAAES,QACzD,gBAACJ,EAAA,OAAD,CAAWlC,MAAO,CAACgC,QAAS,cAC1B,gBAACV,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGc,GAAI,EAAGpC,UAAW,WAAaJ,EAAAA,QAAAA,QAAgBC,MAAO,CAAC,kBAAmB,OACjG6B,EAAEW,UAAUZ,KAAK,SAACC,EAAGC,GAAJ,OAChB,gBAACC,EAAA,EAAD,CAAKE,IAAKH,GACR,gBAACI,EAAA,OAAD,CAAWO,KAAM7B,EAAU8B,KAAKb,EAAEY,MAAQZ,EAAEY,MAAOvC,EAAAA,EAAAA,IAAW2B,EAAEY,MAAOtC,UAAWJ,EAAAA,QAAAA,SAAiB4C,OAAO,SAASC,IAAI,uBAAuBf,EAAEgB,SAAhJ,IAA0J,qBAAG1C,UAAW,qBAAuBJ,EAAAA,QAAAA,WAAmBC,MAAO,CAAC8C,WAAY,2BCpChQ,WAAe,GAAe,IAAZC,EAAW,EAAXA,KAChB,OACE,gBAAC,IAAD,KACE,gBAAC,EAAD,CAASvC,QAASuC,EAAKC","sources":["webpack://lakeside-lumber/./src/components/header.js","webpack://lakeside-lumber/./src/components/products/products.js","webpack://lakeside-lumber/./src/templates/product.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styles from \"./styles/header.module.css\"\nimport { withPrefix } from \"gatsby\"\nimport Container from \"react-bootstrap/Container\"\n\nfunction Header(props) {\n  return (\n    <Container as=\"header\" fluid id={styles.bgImg} style={{backgroundImage: `url(${withPrefix(\"/img/storePano.jpg\")})`}}>\n      <h1 className=\"bg-dark\" id={styles.headerText} style={{\"--bs-bg-opacity\": \".5\"}}>{props.text}</h1>\n    </Container>\n  )\n}\n\nHeader.prototypes = {\n  text: PropTypes.string.isRequired\n}\n\nexport default Header","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport styles from \"./styles/products.module.css\"\nimport Header from \"../header\"\nimport Subheader from \"../subheader\"\nimport Quote from \"../getQuote\"\nimport { withPrefix } from \"gatsby\"\nimport Card from \"react-bootstrap/Card\"\nimport Container from \"react-bootstrap/Container\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\n\n\nfunction Product(props) {\n  let split = props.product.slug.split(\"/\")\n  let titleInfo = split[2].replace(/-/g, \" \")\n  let linkRegex = /^http/i\n  console.log(props.product.subheader)\n  return (\n    <div>\n      <Helmet>\n          <title>{`Lakeside Lumber is your source for ${titleInfo}`}</title>\n          <meta name=\"description\" content={props.product.description + props.product.descriptionLogos} />\n          <meta name=\"keywords\" content={`marcell, bigfok, effie, deer river, talmoon, grand rapids, ${titleInfo}`} />\n        </Helmet>\n      <Header text={titleInfo.toUpperCase()} />\n      <Subheader text={props.product.subheader} />\n      <p id={styles.description}>{props.product.description}</p>\n      <Quote />\n      <Container>\n        <Row xs={1} sm={1} md={2} style={{marginBottom: \"2.5rem\"}}>\n          {props.product.products.map( (x, i) => (\n            <Col style={{padding: \"12px\"}} key={i}>\n              <Card>\n                <Card.Img src={withPrefix(x.image.src)} alt={x.image.alt} />\n                <Card.ImgOverlay style={{padding: \"0\"}}>\n                  <Card.Title className={\"bg-dark \" + styles.cardTitle}>{x.header}</Card.Title>\n                  <Card.Body style={{padding: \"1rem 2rem\"}}>\n                    <Row xs={1} sm={1} md={1} lg={2} className={\"bg-dark \" + styles.cardRow} style={{\"--bs-bg-opacity\": \".5\"}}>\n                      {x.suppliers.map( (x, i) => (\n                        <Col key={i}>\n                          <Card.Link href={linkRegex.test(x.href) ? x.href : withPrefix(x.href)} className={styles.cardLink} target=\"_blank\" rel=\"noopener noreferrer\">{x.supplier} <i className={\"fa fa-angle-right \" + styles.rightArrow} style={{fontWeight: \"bold\"}}></i></Card.Link>\n                        </Col>\n                      ))}\n                    </Row>\n                  </Card.Body>\n                </Card.ImgOverlay>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired\n}\n\nexport default Product","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Product from \"../components/products/products.js\"\nimport { graphql } from \"gatsby\"\n\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <Product product={data.dataJson} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($slug: String!) {\n    dataJson(slug: {eq: $slug}) {\n      products {\n        header\n        image {\n          src\n          alt\n        }\n        suppliers {\n          href\n          supplier\n        }\n      }\n      description\n      subheader\n      slug\n    }\n  }\n`"],"names":["Header","props","Container","as","fluid","id","styles","style","backgroundImage","withPrefix","className","text","prototypes","PropTypes","titleInfo","product","slug","split","replace","linkRegex","console","log","subheader","Helmet","name","content","description","descriptionLogos","toUpperCase","Row","xs","sm","md","marginBottom","products","map","x","i","Col","padding","key","Card","src","image","alt","header","lg","suppliers","href","test","target","rel","supplier","fontWeight","data","dataJson"],"sourceRoot":""}